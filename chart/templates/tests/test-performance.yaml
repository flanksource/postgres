apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "postgres.fullname" . }}-test-performance"
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: test-performance
      image: postgres:{{ .Values.image.tag }}-alpine
      command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Testing PostgreSQL performance and resource configuration..."

          # Wait for PostgreSQL to be ready
          until pg_isready -h {{ include "postgres.serviceName" . }} -p {{ include "postgres.port" . }} -U {{ .Values.database.username }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

          echo "Running performance tests..."

          # Test performance with sample data
          PGPASSWORD="${POSTGRES_PASSWORD}" psql -h {{ include "postgres.serviceName" . }} -p {{ include "postgres.port" . }} -U {{ .Values.database.username }} -d {{ .Values.database.name }} <<EOF
          -- Create test table with some data
          CREATE TABLE IF NOT EXISTS perf_test (
            id SERIAL PRIMARY KEY,
            data TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );

          -- Insert test data
          INSERT INTO perf_test (data)
          SELECT 'test data ' || generate_series(1, 1000);

          -- Test index creation performance
          CREATE INDEX IF NOT EXISTS idx_perf_test_created ON perf_test(created_at);

          -- Test query performance
          SELECT COUNT(*) FROM perf_test;

          -- Test configuration values are properly set
          SELECT name, setting, unit
          FROM pg_settings
          WHERE name IN ('shared_buffers', 'effective_cache_size', 'work_mem', 'maintenance_work_mem')
          ORDER BY name;

          -- Clean up
          DROP TABLE perf_test;
          EOF

          echo "Performance tests completed successfully!"
      env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgres.secretName" . }}
              key: {{ .Values.passwordRef.key }}