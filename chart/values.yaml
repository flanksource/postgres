# Default values for postgres chart

# PostgreSQL container image
image:
  registry: ghcr.io
  repository: flanksource/postgres
  tag: "17"
  pullPolicy: IfNotPresent

# Automatic upgrade configuration
autoUpgrade:
  enabled: true

# Database configuration
database:
  name: postgres
  username: postgres

# Password secret reference
passwordRef:
  secretName: postgres-password
  key: "password"
  create: true # false = use existing secret

# PostgreSQL configuration settings
# Individual settings - auto-tuned based on resources if empty
conf:
  max_connections: "100"
  shared_buffers: "" # Auto-calculated from resources.limits.memory
  effective_cache_size: "" # Auto-calculated from resources.limits.memory
  work_mem: "" # Auto-calculated from resources.limits.memory
  maintenance_work_mem: "" # Auto-calculated from resources.limits.memory
  wal_buffers: "" # Auto-calculated from resources.limits.memory
  checkpoint_completion_target: "0.9"
  random_page_cost: "1.1"
  effective_io_concurrency: "200"

# Custom postgresql.conf override (takes precedence over conf)
custom_conf: ""

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Persistence configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Service configuration
service:
  type: ClusterIP
  port: 5432
  annotations: {}

# ServiceAccount configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  fsGroup: 999
  runAsUser: 999
  runAsGroup: 999
  fsGroupChangePolicy: "OnRootMismatch"

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Startup probe configuration
startupProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

# Readiness probe configuration
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Liveness probe configuration
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

## Change ownership and permissions of mounted volumes on startup to postgres:postgres
resetVolumePermissions: true

# Additional environment variables
env: []
# - name: EXAMPLE_ENV
#   value: "example-value"

# Additional volumes
extraVolumes: []

# Additional volume mounts
extraVolumeMounts: []

# Image pull secrets
imagePullSecrets: []

# Name override
nameOverride: ""

# Full name override
fullnameOverride: ""
