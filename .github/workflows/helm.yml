name: Helm

on:
  push:
    branches:
      - main
      - master
    paths:
      - "chart/**"
      - ".github/workflows/helm.yml"
  pull_request:
    branches:
      - main
      - master
    paths:
      - "chart/**"
      - ".github/workflows/helm.yml"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  HELM_REGISTRY: oci://ghcr.io/flanksource/charts

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Create kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: postgres-upgrade-test

      - name: Test Helm chart
        run: task test:helm:e2e

  package-and-publish:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "3.14.0"

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and push Helm chart
        run: |
          # Package the chart
          helm package chart/ --destination .helm-packages/

          # Get the chart version
          CHART_VERSION=$(helm show chart chart/ | grep '^version:' | cut -d' ' -f2)
          CHART_NAME=$(helm show chart chart/ | grep '^name:' | cut -d' ' -f2)

          echo "Packaging $CHART_NAME version $CHART_VERSION"

          # Push to OCI registry
          helm push .helm-packages/${CHART_NAME}-${CHART_VERSION}.tgz ${{ env.HELM_REGISTRY }}

          echo "Successfully pushed $CHART_NAME:$CHART_VERSION to ${{ env.HELM_REGISTRY }}"

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: chart/
          framework: kubernetes
          soft_fail: true
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
